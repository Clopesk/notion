<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Circle Progress with Timer</title>
<style>
    body, html {
        height: 100%;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    
    .container {
        text-align: center;
    }

    .chart {
        position: relative;
        margin: 80px;
        width: 220px;
        height: 220px;
    }
    
    canvas {
        display: block;
        position: absolute;
        top: 0;
        left: 0;
    }
    
    span {
        color: #555;
        display: block;
        line-height: 220px;
        text-align: center;
        width: 220px;
        font-family: sans-serif;
        font-size: 40px;
        font-weight: 100;
        margin-left: 5px;
    }
</style>
</head>
<body>

<div class="container">
    <div class="chart" id="graph" data-percent="100"></div>
    <div id="timer">25:00</div>
</div>

<script>
    var el = document.getElementById('graph'); // get canvas
    var timerEl = document.getElementById('timer');
    var timerDuration = 25 * 60; // 25 minutes in seconds
    var timeLeft = timerDuration;
    
    var options = {
        size: el.getAttribute('data-size') || 220,
        lineWidth: el.getAttribute('data-line') || 15,
        rotate: el.getAttribute('data-rotate') || 0
    }
    
    var canvas = document.createElement('canvas');
    var span = document.createElement('span');
        
    if (typeof(G_vmlCanvasManager) !== 'undefined') {
        G_vmlCanvasManager.initElement(canvas);
    }
    
    var ctx = canvas.getContext('2d');
    canvas.width = canvas.height = options.size;
    
    el.appendChild(span);
    el.appendChild(canvas);
    
    ctx.translate(options.size / 2, options.size / 2); // change center
    ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg
    
    var radius = (options.size - options.lineWidth) / 2;
    
    var drawCircle = function(color, lineWidth, percent) {
            percent = Math.min(Math.max(0, percent || 1), 1);
            ctx.beginPath();
            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
            ctx.strokeStyle = color;
            ctx.lineCap = 'round'; // butt, round or square
            ctx.lineWidth = lineWidth;
            ctx.stroke();
    };
    
    function updateTimer() {
        var minutes = Math.floor(timeLeft / 60);
        var seconds = timeLeft % 60;
        timerEl.textContent = ('0' + minutes).slice(-2) + ':' + ('0' + seconds).slice(-2);
        
        var percent = (timeLeft / timerDuration) * 100;
        el.setAttribute('data-percent', percent.toFixed(2)); // update data-percent attribute
        drawCircle('#555555', options.lineWidth, percent / 100);
        
        timeLeft--;
        if (timeLeft < 0) clearInterval(timerInterval);
    }
    
    var timerInterval = setInterval(updateTimer, 1000); // update timer every second
</script>

</body>
</html>
